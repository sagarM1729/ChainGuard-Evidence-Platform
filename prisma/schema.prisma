generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Case {
  id          String     @id
  caseNumber  String     @unique
  title       String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  officerId   String
  category    String?
  dateClosed  DateTime?
  dateOpened  DateTime   @default(now())
  location    String?
  priority    Priority   @default(MEDIUM)
  status      CaseStatus @default(OPEN)
  User        User       @relation(fields: [officerId], references: [id])
  evidence    Evidence[]

  @@index([caseNumber])
  @@index([category])
  @@index([description])
  @@index([officerId])
  @@index([priority])
  @@index([status])
  @@index([title])
}

model Evidence {
  id             String       @id
  filename       String
  filetype       String
  notes          String?
  ipfsHash       String       @unique
  blockchainTxId String?      @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime
  caseId         String
  custodyChain   Json?
  encryptionKey  String?
  fileHash       String
  filesize       Int?
  ipfsCid        String       @unique
  isEncrypted    Boolean      @default(true)
  retrievalUrl   String
  accessLevel    AccessLevel  @default(RESTRICTED)
  blockchainHash String?
  category       String?
  collectedAt    DateTime?
  collectedBy    String?
  deviceInfo     Json?
  evidenceType   EvidenceType @default(DOCUMENT)
  location       String?
  tags           String[]
  Case           Case         @relation(fields: [caseId], references: [id])

  @@index([accessLevel])
  @@index([blockchainTxId])
  @@index([caseId])
  @@index([category])
  @@index([evidenceType])
  @@index([fileHash])
  @@index([filename])
  @@index([ipfsCid])
  @@index([notes])
  @@index([tags])
}

model User {
  id         String   @id
  name       String?
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  badge      String?  @unique
  department String?
  role       UserRole @default(OFFICER)
  Case       Case[]

  @@index([department])
  @@index([email])
  @@index([role])
}

model Whitelist {
  id    String @id
  email String @unique
}

model password_reset_tokens {
  id        String   @id
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

enum AccessLevel {
  PUBLIC
  INTERNAL
  RESTRICTED
  CONFIDENTIAL
  TOP_SECRET
}

enum CaseStatus {
  OPEN
  IN_PROGRESS
  UNDER_REVIEW
  CLOSED
  COLD_CASE
  ARCHIVED
}

enum EvidenceType {
  DOCUMENT
  PHOTO
  VIDEO
  AUDIO
  DIGITAL_FILE
  FORENSIC_IMAGE
  LOG_FILE
  DATABASE_DUMP
  OTHER
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum UserRole {
  ADMIN
  SUPERVISOR
  DETECTIVE
  OFFICER
  FORENSIC_TECH
  READONLY
}
